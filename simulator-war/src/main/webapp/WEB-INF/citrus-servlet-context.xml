<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:citrus="http://www.citrusframework.org/schema/config"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.citrusframework.org/schema/config http://www.citrusframework.org/schema/config/citrus-config.xsd">
        
  <description>Automatically loaded via ContextLoaderListener in web.xml - context is shared by all servlets</description>

  <context:annotation-config/>

  <!-- Common properties -->
  <context:property-placeholder location="classpath*:META-INF/citrus-*.properties"/>

  <bean id="loggingInterceptor" class="com.consol.citrus.ws.interceptor.LoggingEndpointInterceptor">
    <description>This interceptor logs the complete message (SOAP envelope)</description>
  </bean>

  <bean id="simulatorPayloadMapping" class="org.springframework.ws.server.endpoint.mapping.UriEndpointMapping">
    <property name="interceptors">
      <list>
        <ref bean="loggingInterceptor"/>
      </list>
    </property>
    <property name="defaultEndpoint" ref="simulatorEndpoint"/>
  </bean>

  <bean id="simulatorEndpoint" class="com.consol.citrus.ws.server.WebServiceEndpoint">
    <property name="endpointAdapter">
      <ref bean="simulatorEndpointAdapter"/>
    </property>
  </bean>

  <!-- Message handler executing the test builders -->
  <bean id="simulatorEndpointAdapter" class="com.consol.citrus.dsl.endpoint.TestExecutingEndpointAdapter">
    <property name="mappingKeyExtractor">
      <ref bean="simulatorMappingKeyExtractor"/>
    </property>
    <property name="responseEndpointAdapter" ref="simulatorInboundAdapter"/>
  </bean>

  <!-- Mapping key extractor reads mapping key from incoming message and maps to existing builder implementation -->
  <bean id="simulatorMappingKeyExtractor" class="com.consol.citrus.endpoint.adapter.mapping.XPathPayloadMappingKeyExtractor">
    <property name="xpathExpression" value="local-name(/*)"/>
  </bean>

  <!-- Simulator inbound channels -->
  <citrus:channel id="simulator.inbound"/>

  <!-- Request receiver and respective response sender -->
  <citrus:channel-sync-endpoint id="simInboundEndpoint"
                                channel="simulator.inbound"
                                use-object-messages="true"
                                timeout="${default.timeout}"/>

  <!-- Incoming message is handled by this adapter, by default send request to message channel -->
  <citrus:channel-endpoint-adapter id="simulatorInboundAdapter"
                                   channel-name="simulator.inbound"
                                   polling-interval="250"
                                   timeout="${default.timeout}"/>

  <!-- Simulator configuration -->
  <bean id="simulatorConfiguraiton" class="com.consol.citrus.simulator.config.SimulatorConfiguration">
    <property name="defaultTimeout" value="${default.timeout}"/>
    <property name="templatePath" value="${default.template.path}"/>
    <property name="defaultBuilder" value="${default.builder.name}"/>
    <property name="templateValidation" value="${simulator.template.validation}"/>
  </bean>

  <!-- Test builder service executes test builders manually -->
  <bean id="useCaseService" class="com.consol.citrus.simulator.service.DefaultUseCaseService"/>

  <!-- SOAP Message Factory -->
  <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>

  <bean id="citrusSpringConfig" class="com.consol.citrus.config.CitrusSpringConfig"/>
  <import resource="classpath*:/META-INF/citrus-*-context.xml"/>
</beans>
